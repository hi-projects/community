<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.community.mapper.MessageMapper">

    <sql id="selectedFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertedFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <!-- 查询某人会话的所有最新一条数据 -->
    <select id="selectConversations">
        select <include refid="selectedFields"></include>
        from message
        where id in(
            select max(id)
            from message
            where status != 2
            and from_id != 0
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <!-- 查询某人会话的数量 -->
    <select id="selectCountOfConversation">
        select count(m.maxid)
        from(
            select max(id) as maxid
            from message
            where status != 2
            and from_id != 0
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        ) as m
    </select>

    <!-- 查询某个会话的所有私信 -->
    <select id="selectMessages">
        select <include refid="selectedFields"></include>
        from message
        where status != 2
        and from_id != 0
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <!-- 查询某个会话的所有私信数量 -->
    <select id="selectCountOfMessage">
        select count(id)
        from message
        where status != 2
        and from_id != 0
        and conversation_id = #{conversationId}
    </select>

    <!-- 查询某个会话的未读私信数量 -->
    <select id="selectUnreadCountOfMessage">
        select count(id)
        from message
        where status = 0
        and from_id != 0
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <insert id="insertMessage" keyProperty="id">
        insert into message(<include refid="insertedFields"></include>)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

    <update id="updateStatus">
        update message
        set status = #{status}
        where id in 
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectLatestNotification" resultType="Message">
        select <include refid="selectedFields"></include>
        from message
        where id in (
        select max(id) from message
        where status != 2
        and from_id = 0
        and to_id = #{userId}
        and conversation_id = #{topic}
        )
    </select>

    <select id="selectCountOfNotification" resultType="int">
        select count(id) from message
        where status != 2
          and from_id = 0
          and to_id = #{userId}
          and conversation_id = #{topic}
    </select>

    <select id="selectCountOfUnreadNotification" resultType="int">
        select count(id) from message
        where status = 0
        and from_id = 0
        and to_id = #{userId}
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
    </select>

    <select id="selectNotificationList" resultType="Message">
        select <include refid="selectedFields"></include>
        from message
        where status != 2
        and from_id = 0
        and to_id = #{userId}
        and conversation_id = #{topic}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

</mapper>